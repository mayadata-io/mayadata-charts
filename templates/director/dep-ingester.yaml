{{- if .Values.type.installDirector -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingester
spec:
  selector:
    matchLabels:
      name: ingester
  replicas: {{ .Values.ingester.replicas }}

  # Ingesters are not ready for at least 1 min
  # after creation.  This has to be in sync with
  # the ring timeout value, as this will stop a
  # stampede of new ingesters if we should loose
  # some.
  minReadySeconds: 60

  # Having maxSurge 0 and maxUnavailable 1 means
  # the deployment will update one ingester at a time
  # as it will have to stop one (making one unavailable)
  # before it can start one (surge of zero)
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1

  template:
    metadata:
      labels:
        name: ingester
    spec:
      # Give ingesters 40 minutes grace to flush chunks and exit cleanly.
      # Service is available during this time, as long as we don't stop
      # too many ingesters at once.
      terminationGracePeriodSeconds: 300

      serviceAccountName: sa-maya-io
      initContainers:
      - name: in-wait-for-crb
        image: {{ .Values.imageRegistry }}/maya-init:1.0.0
        command:
        - sh
        - "-c"
        - |
          set -ex
          export MAYA=$(kubectl get ClusterRoleBinding | grep -w crb-maya-io | awk '{print $1}')
          echo $MAYA
          until [ ! -z "$MAYA" ]
          do
             echo "wating for ClusterRoleBinding"
             sleep 1;
             export MAYA=$(kubectl get ClusterRoleBinding | grep -w crb-maya-io | awk '{print $1}')
             echo $MAYA
          done
      - name: in-wait-for-cassandra
        image: {{ .Values.imageRegistry }}/maya-init:1.0.0
        command:
        - sh
        - "-c"
        - |
          set -ex
          export COUNT=0
          echo $COUNT
          until [ $COUNT -ne 0 ]
          do
             echo "wating for cassandra"
             sleep 2;
             export COUNT=$(kubectl get pods -l app=cassandra -n {{ .Release.Namespace }} -o json  | jq -r '.items[] | select(.status.phase == "Running" and ([ .status.conditions[] | select(.type == "Ready" and .status == "True") ] | length ) >= 1 ) | .metadata.name' | grep -w cassandra | wc -l)
             echo $COUNT
          done
      - name: in-wait-for-consul
        image: {{ .Values.imageRegistry }}/maya-init:1.0.0
        command:
        - sh
        - "-c"
        - |
          set -ex
          export COUNT=0
          echo $COUNT
          until [ $COUNT -ne 0 ]
          do
             echo "wating for consul"
             sleep 2;
             export COUNT=$(kubectl get pods -l name=consul -n {{ .Release.Namespace }} -o json  | jq -r '.items[] | select(.status.phase == "Running" and ([ .status.conditions[] | select(.type == "Ready" and .status == "True") ] | length ) >= 1 ) | .metadata.name' | grep -w consul | wc -l)
             echo $COUNT
          done
      - name: in-wait-for-table-manager
        image: {{ .Values.imageRegistry }}/maya-init:1.0.0
        command:
        - sh
        - "-c"
        - |
          set -ex
          export COUNT=0
          echo $COUNT
          until [ $COUNT -ne 0 ]
          do
             echo "wating for table-manager"
             sleep 2;
             export COUNT=$(kubectl get pods -l name=table-manager -n {{ .Release.Namespace }} -o json  | jq -r '.items[] | select(.status.phase == "Running" and ([ .status.conditions[] | select(.type == "Ready" and .status == "True") ] | length ) >= 1 ) | .metadata.name' | grep -w table-manager | wc -l)
             echo $COUNT
          done
      containers:
      - name: ingester
        image: {{ template "ingesterImage" . }}
        imagePullPolicy: IfNotPresent
        args:
        - -ingester.join-after=30s
        - -ingester.claim-on-rollout=true
        - -consul.hostname=consul.{{ .Release.Namespace }}.svc.{{ .Values.server.clusterDomain }}:8500
        - -dynamodb.original-table-name=cortex
        - -chunk.storage-client=cassandra
        - -cassandra.addresses=cassandra.{{ .Release.Namespace }}.svc.{{ .Values.server.clusterDomain }}
        - -cassandra.keyspace=mayacortex
        - -cassandra.replication-factor={{ .Values.cortex.replicationFactor }}
        - -cassandra.timeout={{ .Values.cortex.timeout }}
        - -dynamodb.periodic-table.prefix=cortex_weekly_
        - -dynamodb.periodic-table.from=2017-01-06
        - -dynamodb.daily-buckets-from=2017-01-10
        - -dynamodb.base64-buckets-from=2017-01-17
        - -dynamodb.v4-schema-from=2017-02-05
        - -dynamodb.v5-schema-from=2017-02-22
        - -dynamodb.v6-schema-from=2017-03-19
        - -dynamodb.chunk-table.from=2017-04-17
        - -memcached.hostname=memcached.{{ .Release.Namespace }}.svc.{{ .Values.server.clusterDomain }}
        - -memcached.timeout=100ms
        - -memcached.service=memcached
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 1
      imagePullSecrets:
      - name: {{ .Values.server.dockerSecret }}
{{- end -}}
